syntax = "proto3";

package org.apache.beam.model.expansion.v1;

option go_package = "jobmanagement_v1";
option java_package = "org.apache.beam.model.expansion.v1";
option java_outer_classname = "ExpansionApi";

import "beam_runner_api.proto";

message ExpansionRequest {
  // Set of components needed to interpret the transform, or which
  // may be useful for its expansion.  This includes the input
  // PCollections (if any) to the to-be-expanded transform, along
  // with their coders and windowing strategies.
  org.apache.beam.model.pipeline.v1.Components components = 1;

  // The actual PTransform to be expaneded according to its spec.
  // Its input should be set, but its subtransforms and outputs
  // should not be.
  org.apache.beam.model.pipeline.v1.PTransform transform = 2;

  // A namespace (prefix) to use for the id of any newly created
  // components.
  string namespace = 3;
}

message ExpansionResponse {
  // Set of components needed to execute the expanded transform,
  // including the (original) inputs, outputs, and subtransforms.
  org.apache.beam.model.pipeline.v1.Components components = 1;

  // The expanded transform itself, with references to its outputs
  // and subtransforms.
  org.apache.beam.model.pipeline.v1.PTransform transform = 2;

  // (Optional) An string representation of any error encountered while
  // attempting to expand this transform.
  string error = 10;
}

// Job Service for constructing pipelines
service ExpansionService {
  rpc Expand (ExpansionRequest) returns (ExpansionResponse);
}
